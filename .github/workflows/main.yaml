name: main

on: [ push ]

jobs:
  prepare:
    uses: in-rich/workflows/.github/workflows/prepare-go.yaml@master
    secrets:
      goprivate_access_token: ${{ secrets.GOPRIVATE_ACCESS_TOKEN }}

  test:
    needs: [ prepare ]
    uses: in-rich/workflows/.github/workflows/test-go.yaml@master

  build:
    needs: [ prepare ]
    uses: in-rich/workflows/.github/workflows/build-go.yaml@master
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    with:
      repository: ${{ github.repository }}
      repository_name: ${{ github.event.repository.name }}
      ref: ${{ github.head_ref || github.ref_name }}
      actor: ${{ github.actor }}

  deploy-preprod:
    needs: [ test, build ]
    if: github.ref == 'refs/heads/staging' && success()
    uses: in-rich/workflows/.github/workflows/deploy-go.yaml@master
    permissions:
      contents: read
      id-token: write
    with:
      env: staging
      github_env: staging
      sha: ${{ github.sha }}
      service: uservice-teams
      project: inrich-preprod
      public: false
      with_postgres: true
    secrets:
      identity_provider: ${{ secrets.PREPROD_IDENTITY_PROVIDER }}
      service_account: ${{ secrets.PREPROD_SERVICE_ACCOUNT }}

  deploy-prod:
    needs: [ test, build ]
    if: github.ref == 'refs/heads/master' && success()
    uses: in-rich/workflows/.github/workflows/deploy-go.yaml@master
    permissions:
      contents: read
      id-token: write
    with:
      env: prod
      github_env: production
      sha: ${{ github.sha }}
      service: uservice-teams
      project: inrich-f9a0a
      public: false
      with_postgres: true
    secrets:
      identity_provider: ${{ secrets.PROD_IDENTITY_PROVIDER }}
      service_account: ${{ secrets.PROD_SERVICE_ACCOUNT }}
